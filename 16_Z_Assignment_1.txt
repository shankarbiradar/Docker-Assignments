Your supermarket company has a simple web service built on nginx that serves a static list of fresh fruit available in their stores. 
They want to run this service as a Docker container in their new swarm environment, but first they need you to build a Docker image for this service.

On this repo (https://github.com/satyensingh/full-docker-training-16-Z-Assignment1.git), you will find the files needed to create the image. 
Create a Dockerfile to define the image according to the provided specifications, then test the image by running a container in detached mode and 
verifying that you can access the fresh fruit data from the application.

The image should meet the following specifications:
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

1. Use nginx tag 1.15.8 as the base image.
   # Set the base image to nginx:1.15.8, FROM is the keyword which tells about the base image.
     FROM nginx:1.15.8

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

2. Add the static fresh fruit data to the image so that it will be served by the nginx server. The data file is located on the server at static/fruit.json under the project directory. Add this file to the image at the location /usr/share/nginx/html/fruit.json.
   # Copy fruit.json file from the static directory. Created a directory called static and inside static directory created file fruit.json which conatins list of fuits .
     ADD /static/fruit.json /usr/share/nginx/html/

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

3. Add the nginx configuration file. This file is located on the server in the project directory and is called nginx.conf. Add this file to the image at /etc/nginx/nginx.conf.
   # Copy a configuration file from the current directory. Once we hit the port 8080 it will redirect to the fruit.json file
     ADD nginx.conf /etc/nginx/

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

4. The image should expose port 80.
   # Expose ports
     EXPOSE 80

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

5. Use the following as the default command: nginx -g daemon off;.
   # Set the default command to execute when creating a new container. Starting nginx in daemon off mode.
     CMD ["nginx", "-g", "daemon off;"]

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

6. Build the image with the tag fruit-list:1.0.0
   docker build -t fruit-list:1.0.0 .
   
#Image will be built with the specified tag if there are no mistakes in Dockerfile.

Once you have built the image you should be able to test it by running it as a container:

   docker run --name fruit-list -d -p 8080:80 fruit-list:1.0.0
   #Container is cretaed.

Verify that the container serves the required data by making a request to it on port 8080. If everything is set up correctly, you should get a JSON list of fruits.
  #Got the JSON list of fruits after running below command.

curl http://<ipaddress>:8080

-------------------------------------------------------------------------------------------------------------------------------------------------------------------
[NOTE: Write the series of commands to achieve above in this file below the question scenario with documentation]


Good luck!